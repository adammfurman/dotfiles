# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []
after-startup-command = []

# Start AeroSpace at login
start-at-login = false

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 20

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = false

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
    preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See:
#                 https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
    inner.horizontal = 16
    inner.vertical =   16
    outer.left =       16
    outer.bottom =     16
    outer.top =        16
    outer.right =      16

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]

    # All possible keys:
    # - Letters.        a, b, c, ..., z
    # - Numbers.        0, 1, 2, ..., 9
    # - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
    # - F-keys.         f1, f2, ..., f20
    # - Special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon,
    #                   backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,
    #                   backspace, tab
    # - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,
    #                   keypadMinus, keypadMultiply, keypadPlus
    # - Arrows.         left, down, up, right

    # All possible modifiers: cmd, alt, ctrl, shift

    # All possible commands: https://nikitabobko.github.io/AeroSpace/commands

    # See: https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget
    # You can uncomment the following lines to open up terminal with alt + enter shortcut
    # (like in i3)
    # alt-enter = '''exec-and-forget osascript -e '
    # tell application "Terminal"
    #     do script
    #     activate
    # end tell'
    # '''

    # See: https://nikitabobko.github.io/AeroSpace/commands#layout
    ctrl-comma = 'layout v_accordion'
    ctrl-slash = 'layout tiles horizontal vertical'
    ctrl-f = 'layout tiling floating'
    ctrl-b = 'balance-sizes'

    # See: https://nikitabobko.github.io/AeroSpace/commands#focus
    ctrl-h = 'focus left --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
    ctrl-j = 'focus down --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
    ctrl-k = 'focus up --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'
    ctrl-l = 'focus right --boundaries all-monitors-outer-frame --boundaries-action wrap-around-all-monitors'

    # See: https://nikitabobko.github.io/AeroSpace/commands#move
    ctrl-shift-h = 'move left'
    ctrl-shift-j = 'move down'
    ctrl-shift-k = 'move up'
    ctrl-shift-l = 'move right'

# See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-monitor
    alt-ctrl-h = 'move-node-to-monitor --focus-follows-window --fail-if-noop --wrap-around left'
    alt-ctrl-j = 'move-node-to-monitor --focus-follows-window --fail-if-noop --wrap-around down'
    alt-ctrl-k = 'move-node-to-monitor --focus-follows-window --fail-if-noop --wrap-around up'
    alt-ctrl-l = 'move-node-to-monitor --focus-follows-window --fail-if-noop --wrap-around right'
    # alt-ctrl-l = 'move-node-to-monitor --focus-follows-window --fail-if-noop --wrap-around next'
    # alt-ctrl-h = 'move-node-to-monitor --focus-follows-window --fail-if-noop --wrap-around prev'

    alt-ctrl-shift-h = 'join-with left'
    alt-ctrl-shift-j = 'join-with down'
    alt-ctrl-shift-k = 'join-with up'
    alt-ctrl-shift-l = 'join-with right'

    # See: https://nikitabobko.github.io/AeroSpace/commands#resize
    ctrl-minus = 'resize smart -100'
    ctrl-equal = 'resize smart +100'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace
    ctrl-1 = 'workspace 1 '
    ctrl-2 = 'workspace 2 '
    ctrl-3 = 'workspace 3 '
    ctrl-4 = 'workspace 4 '
    ctrl-5 = 'workspace 5 '
    ctrl-6 = 'workspace 6 '
    ctrl-7 = 'workspace 7 '
    ctrl-8 = 'workspace 8 '
    ctrl-9 = 'workspace 9 '

    # See: https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace
    ctrl-shift-1 = 'move-node-to-workspace 1 --focus-follows-window'
    ctrl-shift-2 = 'move-node-to-workspace 2 --focus-follows-window'
    ctrl-shift-3 = 'move-node-to-workspace 3 --focus-follows-window'
    ctrl-shift-4 = 'move-node-to-workspace 4 --focus-follows-window'
    ctrl-shift-5 = 'move-node-to-workspace 5 --focus-follows-window'
    ctrl-shift-6 = 'move-node-to-workspace 6 --focus-follows-window'
    ctrl-shift-7 = 'move-node-to-workspace 7 --focus-follows-window'
    ctrl-shift-8 = 'move-node-to-workspace 8 --focus-follows-window'
    ctrl-shift-9 = 'move-node-to-workspace 9 --focus-follows-window'

    alt-ctrl-right = 'move-node-to-workspace --focus-follows-window --wrap-around next'
    alt-ctrl-left = 'move-node-to-workspace --focus-follows-window --wrap-around prev'

    # See: https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth
    ctrl-tab = 'workspace-back-and-forth'
    # See: https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor
    ctrl-shift-tab = 'move-workspace-to-monitor --wrap-around next'

    # See: https://nikitabobko.github.io/AeroSpace/commands#mode
    ctrl-shift-semicolon = 'mode service'

# 'service' binding mode declaration.
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
[mode.service.binding]
    esc = ['reload-config', 'mode main']
    r = ['flatten-workspace-tree', 'mode main'] # reset layout
    f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout
    backspace = ['close-all-windows-but-current', 'mode main']

    # sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
    #s = ['layout sticky tiling', 'mode main']

[workspace-to-monitor-force-assignment]
    1 = 'built-in Retina Display'
    2 = 'LG HDR WQHD'
    3 = 'LG HDR 4k'

# Always float windows of these applications:
# See: https://nikitabobko.github.io/AeroSpace/guide#callbacks
[[on-window-detected]]
    if.app-id = 'com.1password.1password'
    run = 'layout floating'
    
[[on-window-detected]]    
    if.app-id = 'io.balena.etcher'
    run = 'layout floating'

[[on-window-detected]]    
    if.app-id = 'at.obdev.littlesnitch'
    run = 'layout floating'

[[on-window-detected]]    
    if.app-id = 'com.apple.finder'
    run = 'layout floating'

[[on-window-detected]]    
    if.app-id = 'net.ankiweb.dtop'
    run = 'layout floating'

[[on-window-detected]]    
    if.app-id = 'com.alienator88.Pearcleaner'
    run = 'layout floating'

# [[on-window-detected]]    
#     if.app-id = ''
#     run = 'layout floating'
